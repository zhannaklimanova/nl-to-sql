[
    {
        "sql_query": "(SELECT main_app_chant.id AS col1, main_app_chant.title AS col2, main_app_chant.incipit AS col3, main_app_chant.folio AS col4, main_app_chant.genre_id AS col5, main_app_chant.source_id AS col6, main_app_chant.cantus_id AS col7, main_app_chant.image_link AS col8, main_app_chant.service_id AS col9, main_app_chant.position AS col10, main_app_chant.feast_id AS col11, main_app_chant.mode AS col12, main_app_chant.manuscript_full_text_std_spelling AS col13, main_app_chant.manuscript_full_text AS col14, main_app_chant.volpiano AS col15, main_app_chant.search_vector AS col16, main_app_genre.id AS col17, main_app_genre.date_created AS col18, main_app_genre.date_updated AS col19, main_app_genre.created_by_id AS col20, main_app_genre.last_updated_by_id AS col21, main_app_genre.name AS col22, main_app_genre.description AS col23, main_app_genre.mass_office AS col24, main_app_source.id AS col25, main_app_source.holding_institution_id AS col26, main_app_source.shelfmark AS col27, main_app_institution.id AS col28, main_app_institution.name AS col29, main_app_institution.siglum AS col30, main_app_institution.city AS col31, main_app_service.id AS col32, main_app_service.date_created AS col33, main_app_service.date_updated AS col34, main_app_service.created_by_id AS col35, main_app_service.last_updated_by_id AS col36, main_app_service.name AS col37, main_app_service.description AS col38, main_app_feast.id AS col39, main_app_feast.name AS col40, main_app_feast.description AS col41 FROM main_app_chant INNER JOIN main_app_genre ON (main_app_chant.genre_id = main_app_genre.id) INNER JOIN main_app_source ON (main_app_chant.source_id = main_app_source.id) LEFT OUTER JOIN main_app_institution ON (main_app_source.holding_institution_id = main_app_institution.id) LEFT OUTER JOIN main_app_service ON (main_app_chant.service_id = main_app_service.id) LEFT OUTER JOIN main_app_feast ON (main_app_chant.feast_id = main_app_feast.id) WHERE (main_app_chant.genre_id = 122 AND (UPPER(main_app_chant.manuscript_full_text::text) LIKE UPPER('%alle%') OR UPPER(main_app_chant.manuscript_full_text_std_spelling::text) LIKE UPPER('%alle%') OR UPPER(main_app_chant.incipit::text) LIKE UPPER('%alle%')))) UNION ALL (SELECT main_app_sequence.id AS col1, main_app_sequence.title AS col2, main_app_sequence.incipit AS col3, main_app_sequence.folio AS col4, main_app_sequence.genre_id AS col5, main_app_sequence.source_id AS col6, main_app_sequence.cantus_id AS col7, main_app_sequence.image_link AS col8, main_app_sequence.service_id AS col9, main_app_sequence.position AS col10, main_app_sequence.feast_id AS col11, main_app_sequence.mode AS col12, main_app_sequence.manuscript_full_text_std_spelling AS col13, main_app_sequence.manuscript_full_text AS col14, main_app_sequence.volpiano AS col15, main_app_sequence.search_vector AS col16, main_app_genre.id AS col17, main_app_genre.date_created AS col18, main_app_genre.date_updated AS col19, main_app_genre.created_by_id AS col20, main_app_genre.last_updated_by_id AS col21, main_app_genre.name AS col22, main_app_genre.description AS col23, main_app_genre.mass_office AS col24, main_app_source.id AS col25, main_app_source.holding_institution_id AS col26, main_app_source.shelfmark AS col27, main_app_institution.id AS col28, main_app_institution.name AS col29, main_app_institution.siglum AS col30, main_app_institution.city AS col31, main_app_service.id AS col32, main_app_service.date_created AS col33, main_app_service.date_updated AS col34, main_app_service.created_by_id AS col35, main_app_service.last_updated_by_id AS col36, main_app_service.name AS col37, main_app_service.description AS col38, main_app_feast.id AS col39, main_app_feast.name AS col40, main_app_feast.description AS col41 FROM main_app_sequence INNER JOIN main_app_genre ON (main_app_sequence.genre_id = main_app_genre.id) INNER JOIN main_app_source ON (main_app_sequence.source_id = main_app_source.id) LEFT OUTER JOIN main_app_institution ON (main_app_source.holding_institution_id = main_app_institution.id) LEFT OUTER JOIN main_app_service ON (main_app_sequence.service_id = main_app_service.id) LEFT OUTER JOIN main_app_feast ON (main_app_sequence.feast_id = main_app_feast.id) WHERE (main_app_sequence.genre_id = 122 AND (UPPER(main_app_sequence.manuscript_full_text::text) LIKE UPPER('%alle%') OR UPPER(main_app_sequence.manuscript_full_text_std_spelling::text) LIKE UPPER('%alle%') OR UPPER(main_app_sequence.incipit::text) LIKE UPPER('%alle%')))) ORDER BY col30 ASC, col1 ASC;",
        "predicted_sql_query": {
            "gemini": {
                "predicted_output_path": "predicted_outputs/chants/c1_gemini.csv"
            },
            "gpt": {
                "predicted_output_path": "predicted_outputs/chants/c1_gpt.csv"
            },
            "hugging_face_chat": {
                "predicted_output_path": "predicted_outputs/chants/c1_hugging_face_chat.csv"
            },
            "claude": {
                "predicted_output_path": "predicted_outputs/chants/c1_claude.csv"
            },
            "microsoft_copilot": {
                "predicted_output_path": "predicted_outputs/chants/c1_microsoft_copilot.csv"
            }
        },
        "gold_output_path": "gold_outputs/chants/c1.csv",
        "natural_language_inputs": [
            "Show me all the Chants in the database belonging to the 'Antiphon' Genre that contain the word 'alle', sorted by institution siglum."
        ]
    },
    {
        "sql_query": "CHANTS",
        "gold_output_path": "gold_outputs/chants/c2.csv",
        "natural_language_inputs": [
            "Some Queries Here"
        ]
    },
    {
        "sql_query": "CHANTS",
        "gold_output_path": "gold_outputs/chants/c3.csv",
        "natural_language_inputs": [
            "Some Queries Here"
        ]
    }
]
